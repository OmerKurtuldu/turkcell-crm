version: "3.5"
services:
  redis:
    image: redis:latest
    ports:
      - "6379:6379"

  zookeeper:
    image: "docker.io/bitnami/zookeeper:3"
    ports:
      - "2181:2181"
    volumes:
      - "zookeeper_data:/bitnami"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  kafka:
    image: "docker.io/bitnami/kafka:2-debian-10"
    ports:
      - "9092:9092"
    expose:
      - "9093"
    volumes:
      - "kafka_data:/bitnami"
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_ADVERTISED_LISTENERS=INSIDE://kafka:9093,OUTSIDE://localhost:9092
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      - KAFKA_LISTENERS=INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
      - KAFKA_INTER_BROKER_LISTENER_NAME=INSIDE
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
    depends_on:
      - zookeeper

  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: kafka-ui
    ports:
      - "9090:8080"
    restart: always
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9093
      - KAFKA_CLUSTERS_0_ZOOKEEPER=localhost:2181

  configserver:
    image: configserverimage
    build: ./configServer
    restart: always
    container_name: configserver
    volumes:
      - ./configServer:/app
    ports:
      - "8051:8051"

  discoveryserver:
    image: discoverserverimage
    build: ./discoveryServer
    restart: always
    container_name: discoveryserver
    volumes:
      - ./discoveryServer:/app
    depends_on:
      - configserver
    ports:
      - "8761:8761"

  gatewayservice:
    image: gatewayserviceimage
    build: ./gatewayService
    container_name: gatewayservice
    restart: always
    ports:
      - "8760:8760"
    volumes:
      - ./gatewayService:/app
    depends_on:
      - configserver
      - discoveryserver

  identitydbprod:
    container_name: identitydbprod
    image: postgres
    ports:
      - "5461:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=12345
      - POSTGRES_DB=identitydbprod
    volumes:
      - "identity_data:/var/lib/postgresql/data"

  identityservice:
    build: ./identityService
    container_name: identityservice
    image: identityserviceimage
    volumes:
      - ./identityService:/app
    ports:
      - "8763:8763"
    depends_on:
      - discoveryserver
      - configserver
      - identitydbprod
      - kafka

  accountdb:
    container_name: accountdb
    image: postgres
    ports:
      - "5462:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=12345
      - POSTGRES_DB=accountdb
    volumes:
      - "account_data:/var/lib/postgresql/data"

  accountservice:
    build: ./accountService
    container_name: accountservice
    image: accountserviceimage
    volumes:
      - ./accountService:/app
    ports:
      - "8764:8764"
    depends_on:
      - discoveryserver
      - configserver
      - accountdb


volumes:
  zookeeper_data:
    driver: local
  kafka_data:
    driver: local
  identity_data:
    name: identity_data
  account_data:
    driver: local
